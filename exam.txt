Github classroom: https://classroom.github.com/a/yB0YHWmd

- 모든 결과물은 자신이 복제한 classroom repository에 저장해야 함. 자신의 개인 repository에서 과제를 하면 Public Access로 해도 0점을 부여함.

- 따라서 과제로 제출하는 것은 자신이 복제한 classroom repository 주소.


과제:  제품 review 데이터의 감성 분석

프로젝트 개요:

학생들은 텍스트 데이터를 감성으로 분류하는 감성 분석 시스템을 개발합니다. 이 프로젝트는 전처리, 모델 선택, 학습, 평가 및 결과 시각화를 포함합니다.

프로젝트 목표 (보고서 목차)

====================================================================
감성 분석의 기본 이해: 감성 분석이 무엇이며 그 응용에 대해 학습
데이터 전처리: 머신 러닝 작업을 위해 데이터 전 처리하는 경험을 쌓음
모델 선택 및 학습: 수업에서 활용한 모델을 활용해서 구현하고 그 강점과 약점을 이해 (수업에서 사용한 모델 사용)
평가: 적절한 지표를 사용하여 모델의 성능을 평가
시각화 및 해석: 결과를 시각화하고 해석
프로젝트 구성 요소:
====================================================================

데이터:
	자신의 학번이 홀수로 끝나는 학생은 amazon_uk_shoes_products_dataset_2021_12.csv를
	분석해야 하는 자료는 classroom repository에 있습니다.

1. 데이터 전처리:
	데이터 정리 (노이즈 제거, 결측값 처리 등).
	텍스트 토큰화 및 불용어 제거.
	텍스트 정규화 (스테밍 또는 표제어 추출).
	+) 필요하다면 더 추가해야 할 수도 있음

2. 모델 구현:
	수업에서 활용한 모델을 적용

3. 모델 학습 및 튜닝:
	데이터셋을 학습 및 테스트 세트로 분할.
	모델 학습 및 하이퍼파라미터 튜닝 (예: 그리드 서치 또는 랜덤 서치 사용).
	교차 검증과 같은 기술을 사용하여 견고성 보장.

4. 모델 평가:
	정확도, 정밀도, 재현율, F1 점수 및 ROC-AUC와 같은 지표를 사용하여 모델 평가.
	오버피팅과 언더피팅을 논의하고 이를 해결하는 방법 학습.

5. 시각화 및 보고: (적절한 것을 골라서 쓰고, 추가할 것이 있으면 추가하라)
	Matplotlib 또는 Seaborn과 같은 라이브러리를 사용하여 결과 시각화.
	혼동 행렬 및 ROC 곡선 생성.
	보고서에 결과 요약.

제출물:
	1. 코드 저장소: 명확한 실행 지침이 포함된 문서화된 코드 (쥬피터 노트북)
	2. 보고서: 데이터 전처리, 모델 구현, 결과 및 분석을 포함한 상세 보고서 (MS Word 파일)
	3. 모든 코드는 comment가 있어야 하고 외부의 프로그램을 사용했을 때는 출처를 밝혀야 함.